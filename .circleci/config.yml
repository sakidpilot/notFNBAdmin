version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test --passWithNoTests

  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'

  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run SonarQube Analysis
          command: |
            SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
            echo "Sonar branch value is: " $SONAR_BRANCH
            echo "Sonar org value is: " $SONAR_ORG
            sonar-scanner \
              -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
              -Dsonar.organization="$SONAR_ORG" \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.exclusions="*/android/,/ios/*" \
              -Dsonar.login="$SONAR_TOKEN" \
              -Dsonar.branch.name="$SONAR_BRANCH" \
              -Dsonar.sources="." \
              -Dsonar.c.file.suffixes=- \
              -Dsonar.cpp.file.suffixes=- \
              -Dsonar.objc.file.suffixes=-

  newmantest:
    docker:
      - image: cimg/node:18.20.2
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run Newman tests
          command: npm run test-api &
      - attach_workspace:
          at: ~/workspace

workflows:
  version: 2
  test:
    jobs:
      - test-node
      - sonarqube
      - newmantest:
          requires:
            - sonarqube

