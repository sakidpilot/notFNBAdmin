version: 2.1

jobs:
  run_tests:
    docker:
      - image: circleci/node:16  
    steps:
      - checkout  # Pulls your repo code to the CircleCI environment
      - run:
          name: Install dependencies
          command: |
            ..
            npm install  # Install the dependencies, including Jest
     # - run:
      #    name: Ensure Jest is executable
       #   command: |
        #    cd Backend
         #   chmod +x ./node_modules/.bin/jest  # Ensure the Jest binary has execute permissions
      #- run:
       #   name: Run Jest tests
        #  command: |
         #   ..
          #  ./node_modules/.bin/jest --coverage  # Explicitly run Jest

  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    resource_class: small
    steps:
      - run: |
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: $SONAR_BRANCH"
          echo "Sonar org value is: $SONAR_ORG"
          sonar-scanner \
            -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
            -Dsonar.organization="$SONAR_ORG" \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.exclusions="**/android/**,**/ios/**" \
            -Dsonar.login="$SONAR_TOKEN" \
            -Dsonar.branch.name="$SONAR_BRANCH" \
            -Dsonar.sources="." \
            -Dsonar.c.file.suffixes=- \
            -Dsonar.cpp.file.suffixes=- \
            -Dsonar.objc.file.suffixes=-
            
  newmantest:
    docker:
      - image: cimg/node:18.20.2
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Run Newman tests
          command: |
            npm run test-api &
      - attach_workspace:
          at: ~/workspace

  build:
    docker:
      - image: circleci/node:16  
    steps:
      - checkout  # Pulls the repository code
      - run:
          name: Install dependencies and build project
          command: |
            npm install  
            npm run build  
      - sonarcloud/scan  # Runs SonarCloud analysis

workflows:
  version: 2
  test:
    jobs:
      - run_tests
      - sonarqube
      - newmantest:
          requires:
            - sonarqube
